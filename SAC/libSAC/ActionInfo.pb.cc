// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActionInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActionInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace SAC {
class ActionInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionInfo> {
} _ActionInfo_default_instance_;

namespace protobuf_ActionInfo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionInfo, actionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionInfo, chargingrulename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionInfo, result_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ActionInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ActionInfo.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _ActionInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ActionInfo_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020ActionInfo.proto\022\003SAC\"H\n\nActionInfo\022\020\n"
      "\010ActionID\030\001 \001(\005\022\030\n\020ChargingRuleName\030\002 \001("
      "\t\022\016\n\006Result\030\003 \001(\005b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 105);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ActionInfo.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ActionInfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionInfo::kActionIDFieldNumber;
const int ActionInfo::kChargingRuleNameFieldNumber;
const int ActionInfo::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionInfo::ActionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ActionInfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:SAC.ActionInfo)
}
ActionInfo::ActionInfo(const ActionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chargingrulename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chargingrulename().size() > 0) {
    chargingrulename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chargingrulename_);
  }
  ::memcpy(&actionid_, &from.actionid_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&actionid_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:SAC.ActionInfo)
}

void ActionInfo::SharedCtor() {
  chargingrulename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&actionid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&actionid_) + sizeof(result_));
  _cached_size_ = 0;
}

ActionInfo::~ActionInfo() {
  // @@protoc_insertion_point(destructor:SAC.ActionInfo)
  SharedDtor();
}

void ActionInfo::SharedDtor() {
  chargingrulename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionInfo::descriptor() {
  protobuf_ActionInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionInfo_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionInfo& ActionInfo::default_instance() {
  protobuf_ActionInfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionInfo* ActionInfo::New(::google::protobuf::Arena* arena) const {
  ActionInfo* n = new ActionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:SAC.ActionInfo)
  chargingrulename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&actionid_, 0, reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&actionid_) + sizeof(result_));
}

bool ActionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SAC.ActionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ActionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ChargingRuleName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chargingrulename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chargingrulename().data(), this->chargingrulename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SAC.ActionInfo.ChargingRuleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SAC.ActionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SAC.ActionInfo)
  return false;
#undef DO_
}

void ActionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SAC.ActionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ActionID = 1;
  if (this->actionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->actionid(), output);
  }

  // string ChargingRuleName = 2;
  if (this->chargingrulename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chargingrulename().data(), this->chargingrulename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SAC.ActionInfo.ChargingRuleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chargingrulename(), output);
  }

  // int32 Result = 3;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:SAC.ActionInfo)
}

::google::protobuf::uint8* ActionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SAC.ActionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ActionID = 1;
  if (this->actionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->actionid(), target);
  }

  // string ChargingRuleName = 2;
  if (this->chargingrulename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chargingrulename().data(), this->chargingrulename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SAC.ActionInfo.ChargingRuleName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chargingrulename(), target);
  }

  // int32 Result = 3;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SAC.ActionInfo)
  return target;
}

size_t ActionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SAC.ActionInfo)
  size_t total_size = 0;

  // string ChargingRuleName = 2;
  if (this->chargingrulename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chargingrulename());
  }

  // int32 ActionID = 1;
  if (this->actionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actionid());
  }

  // int32 Result = 3;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SAC.ActionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SAC.ActionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SAC.ActionInfo)
    MergeFrom(*source);
  }
}

void ActionInfo::MergeFrom(const ActionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SAC.ActionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chargingrulename().size() > 0) {

    chargingrulename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chargingrulename_);
  }
  if (from.actionid() != 0) {
    set_actionid(from.actionid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void ActionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SAC.ActionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionInfo::CopyFrom(const ActionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SAC.ActionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionInfo::IsInitialized() const {
  return true;
}

void ActionInfo::Swap(ActionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionInfo::InternalSwap(ActionInfo* other) {
  chargingrulename_.Swap(&other->chargingrulename_);
  std::swap(actionid_, other->actionid_);
  std::swap(result_, other->result_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionInfo::GetMetadata() const {
  protobuf_ActionInfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ActionInfo_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionInfo

// int32 ActionID = 1;
void ActionInfo::clear_actionid() {
  actionid_ = 0;
}
::google::protobuf::int32 ActionInfo::actionid() const {
  // @@protoc_insertion_point(field_get:SAC.ActionInfo.ActionID)
  return actionid_;
}
void ActionInfo::set_actionid(::google::protobuf::int32 value) {
  
  actionid_ = value;
  // @@protoc_insertion_point(field_set:SAC.ActionInfo.ActionID)
}

// string ChargingRuleName = 2;
void ActionInfo::clear_chargingrulename() {
  chargingrulename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ActionInfo::chargingrulename() const {
  // @@protoc_insertion_point(field_get:SAC.ActionInfo.ChargingRuleName)
  return chargingrulename_.GetNoArena();
}
void ActionInfo::set_chargingrulename(const ::std::string& value) {
  
  chargingrulename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SAC.ActionInfo.ChargingRuleName)
}
#if LANG_CXX11
void ActionInfo::set_chargingrulename(::std::string&& value) {
  
  chargingrulename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SAC.ActionInfo.ChargingRuleName)
}
#endif
void ActionInfo::set_chargingrulename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chargingrulename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SAC.ActionInfo.ChargingRuleName)
}
void ActionInfo::set_chargingrulename(const char* value, size_t size) {
  
  chargingrulename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SAC.ActionInfo.ChargingRuleName)
}
::std::string* ActionInfo::mutable_chargingrulename() {
  
  // @@protoc_insertion_point(field_mutable:SAC.ActionInfo.ChargingRuleName)
  return chargingrulename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionInfo::release_chargingrulename() {
  // @@protoc_insertion_point(field_release:SAC.ActionInfo.ChargingRuleName)
  
  return chargingrulename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionInfo::set_allocated_chargingrulename(::std::string* chargingrulename) {
  if (chargingrulename != NULL) {
    
  } else {
    
  }
  chargingrulename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chargingrulename);
  // @@protoc_insertion_point(field_set_allocated:SAC.ActionInfo.ChargingRuleName)
}

// int32 Result = 3;
void ActionInfo::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 ActionInfo::result() const {
  // @@protoc_insertion_point(field_get:SAC.ActionInfo.Result)
  return result_;
}
void ActionInfo::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:SAC.ActionInfo.Result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace SAC

// @@protoc_insertion_point(global_scope)
