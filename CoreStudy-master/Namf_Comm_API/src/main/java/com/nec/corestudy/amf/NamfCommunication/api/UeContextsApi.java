/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nec.corestudy.amf.NamfCommunication.api;

import com.nec.corestudy.amf.NamfCommunication.model.AMFAssignEbiData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFAssignEbiError;
import com.nec.corestudy.amf.NamfCommunication.model.AMFAssignedEbiData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFN1N2MessageData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFN1N2MessageTransferError;
import com.nec.corestudy.amf.NamfCommunication.model.AMFN1N2MessageTransferRspData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFProblemDetails;
import com.nec.corestudy.amf.NamfCommunication.model.AMFUEContextRelease;
import com.nec.corestudy.amf.NamfCommunication.model.AMFUeContextCreateData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFUeContextCreateError;
import com.nec.corestudy.amf.NamfCommunication.model.AMFUeContextCreatedData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFUeContextTransferReqData;
import com.nec.corestudy.amf.NamfCommunication.model.AMFUeContextTransferRspData;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-05-22T15:31:52.210+09:00")

@Api(value = "ue-contexts", description = "the ue-contexts API")
public interface UeContextsApi {

    @ApiOperation(value = "EBI Assignment", nickname = "postEBIAssignment", notes = "see 29.518 6.1.3.2", response = AMFAssignedEbiData.class, tags={ "EBI Assignment", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = AMFAssignedEbiData.class),
        @ApiResponse(code = 403, message = "Forbidden.", response = AMFAssignEbiError.class) })
    @RequestMapping(value = "/ue-contexts/{ueContextId}/assignEbi",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<AMFAssignedEbiData> postEBIAssignment(@ApiParam(value = "ueContextId.",required=true) @PathVariable("ueContextId") String ueContextId,@ApiParam(value = "The information required for AMF to allocate EPS bearer ID(s)." ,required=true )  @Valid @RequestBody AMFAssignEbiData assignEbiData);


    @ApiOperation(value = "N1 N2 Message Transfer", nickname = "postN1N2MessageTransfer", notes = "see 29.518 6.1.3.10", response = AMFN1N2MessageTransferRspData.class, tags={ "N1 N2 Message Transfer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = AMFN1N2MessageTransferRspData.class),
        @ApiResponse(code = 202, message = "ACCEPTED.", response = AMFN1N2MessageTransferRspData.class),
        @ApiResponse(code = 307, message = "TEMPORARY REDIRECT.", response = AMFProblemDetails.class),
        @ApiResponse(code = 409, message = "CONFLICT.", response = AMFN1N2MessageTransferError.class),
        @ApiResponse(code = 504, message = "GATEWAY TIMEOUT.", response = AMFN1N2MessageTransferError.class) })
    @RequestMapping(value = "/ue-contexts/{ueContextId}/n1-n2-messages",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<AMFN1N2MessageTransferRspData> postN1N2MessageTransfer(@ApiParam(value = "ueContextId.",required=true) @PathVariable("ueContextId") String ueContextId,@ApiParam(value = "N1N2MessageData." ,required=true )  @Valid @RequestBody AMFN1N2MessageData n1N2MessageData);


    @ApiOperation(value = "Release UE Context", nickname = "postReleaseUEContext", notes = "see 29.518 6.1.3.2", tags={ "Release UE Context", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content."),
        @ApiResponse(code = 403, message = "Forbidden.", response = AMFProblemDetails.class) })
    @RequestMapping(value = "/ue-contexts/{ueContextId}/release",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> postReleaseUEContext(@ApiParam(value = "ueContextId.",required=true) @PathVariable("ueContextId") String ueContextId,@ApiParam(value = "Defines the UE Context to be created." ,required=true )  @Valid @RequestBody AMFUEContextRelease uEContextRelease);


    @ApiOperation(value = "UEContextTransfer", nickname = "postUEContextTransfer", notes = "see 29.518 6.1.3.2", response = AMFUeContextTransferRspData.class, tags={ "UE Context Transfer", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = AMFUeContextTransferRspData.class),
        @ApiResponse(code = 403, message = "Forbidden.", response = AMFProblemDetails.class),
        @ApiResponse(code = 404, message = "Not Found.", response = AMFProblemDetails.class) })
    @RequestMapping(value = "/ue-contexts/{ueContextId}/transfer",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<AMFUeContextTransferRspData> postUEContextTransfer(@ApiParam(value = "ueContextId.",required=true) @PathVariable("ueContextId") String ueContextId,@ApiParam(value = "The information required for AMF to allocate EPS bearer ID(s)." ,required=true )  @Valid @RequestBody AMFUeContextTransferReqData ueContextTransferReqData);


    @ApiOperation(value = "Create UE Context", nickname = "putCreateUEContext", notes = "see 29.518 6.1.3.2", response = AMFUeContextCreatedData.class, tags={ "Create UE Context", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created.", response = AMFUeContextCreatedData.class),
        @ApiResponse(code = 403, message = "Forbidden.", response = AMFUeContextCreateError.class) })
    @RequestMapping(value = "/ue-contexts/{ueContextId}",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<AMFUeContextCreatedData> putCreateUEContext(@ApiParam(value = "ueContextId.",required=true) @PathVariable("ueContextId") String ueContextId,@ApiParam(value = "Defines the UE Context to be created." ,required=true )  @Valid @RequestBody AMFUeContextCreateData ueContextCreateData);

}
