/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nec.corestudy.udm.NudmUECM.api;

import com.nec.corestudy.udm.NudmUECM.model.Amf3GppAccessRegistration;
import com.nec.corestudy.udm.NudmUECM.model.Amf3GppAccessRegistrationModification;
import com.nec.corestudy.udm.NudmUECM.model.AmfNon3GppAccessRegistration;
import com.nec.corestudy.udm.NudmUECM.model.AmfNon3GppAccessRegistrationModification;
import com.nec.corestudy.udm.NudmUECM.model.SmfRegistration;
import com.nec.corestudy.udm.NudmUECM.model.SmsfRegistration;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-05-15T20:24:10.908+09:00")

@Api(value = "{ueId}", description = "the {ueId} API")
public interface UeIdApi {

    @ApiOperation(value = "individual-smf-registration.", nickname = "deleteIndividualSmfRegistration", notes = "see 29.503 6.2.3.5", tags={ "individual-smf-registration", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/smf-registrations/{pduSessionId}",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteIndividualSmfRegistration(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "pduSessionId. ",required=true) @PathVariable("pduSessionId") String pduSessionId);


    @ApiOperation(value = "smsf-3gpp-access.", nickname = "deleteSmsf3gppAccess", notes = "see 29.503 6.2.3.6", tags={ "smsf-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/smsf-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteSmsf3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId);


    @ApiOperation(value = "smsf-non-3gpp-access.", nickname = "deleteSmsfNon3gppAccess", notes = "see 29.503 6.2.3.7", tags={ "smsf-non-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/smsf-non-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteSmsfNon3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId);


    @ApiOperation(value = "amf-3gpp-access.", nickname = "getAmf3gppAccess", notes = "see 29.503 6.2.3.2", response = Amf3GppAccessRegistration.class, tags={ "amf-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = Amf3GppAccessRegistration.class) })
    @RequestMapping(value = "/{ueId}/registrations/amf-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<Amf3GppAccessRegistration> getAmf3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures);


    @ApiOperation(value = "amf-non-3gpp-access.", nickname = "getAmfNon3gppAccess", notes = "see 29.503 6.2.3.3", response = AmfNon3GppAccessRegistration.class, tags={ "amf-non-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = AmfNon3GppAccessRegistration.class) })
    @RequestMapping(value = "/{ueId}/registrations/amf-non-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<AmfNon3GppAccessRegistration> getAmfNon3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures);


    @ApiOperation(value = "smsf-3gpp-access.", nickname = "getSmsf3gppAccess", notes = "see 29.503 6.2.3.7", response = SmsfRegistration.class, tags={ "smsf-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = SmsfRegistration.class) })
    @RequestMapping(value = "/{ueId}/registrations/smsf-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<SmsfRegistration> getSmsf3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures);


    @ApiOperation(value = "smsf-non-3gpp-access.", nickname = "getSmsfNon3gppAccess", notes = "see 29.503 6.2.3.7", response = SmsfRegistration.class, tags={ "smsf-non-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK.", response = SmsfRegistration.class) })
    @RequestMapping(value = "/{ueId}/registrations/smsf-non-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<SmsfRegistration> getSmsfNon3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures);


    @ApiOperation(value = "amf-3gpp-access.", nickname = "patchAmf3gppAccess", notes = "see 29.503 6.2.3.2", tags={ "amf-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/amf-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PATCH)
    ResponseEntity<Void> patchAmf3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "The AMF registration for 3GPP access is replaced with the received information" ,required=true )  @Valid @RequestBody Amf3GppAccessRegistrationModification amf3GppAccessRegistrationModification);


    @ApiOperation(value = "amf-non-3gpp-access.", nickname = "patchAmfNon3gppAccess", notes = "see 29.503 6.2.3.3", tags={ "amf-non-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/amf-non-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PATCH)
    ResponseEntity<Void> patchAmfNon3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "The AMF registration for non 3GPP access is modified with the received information." ,required=true )  @Valid @RequestBody AmfNon3GppAccessRegistrationModification amfNon3GppAccessRegistrationModification);


    @ApiOperation(value = "amf-3gpp-access.", nickname = "putAmf3gppAccess", notes = "see 29.503 6.2.3.2", tags={ "amf-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/amf-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> putAmf3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "The AMF registration for 3GPP access is replaced with the received information" ,required=true )  @Valid @RequestBody Amf3GppAccessRegistration amf3gppAccessRegistration);


    @ApiOperation(value = "amf-non-3gpp-access.", nickname = "putAmfNon3gppAccess", notes = "see 29.503 6.2.3.3", tags={ "amf-non-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/amf-non-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> putAmfNon3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "The AMF registration for non 3GPP access is replaced with the received information." ,required=true )  @Valid @RequestBody AmfNon3GppAccessRegistration amfNon3gppAccessRegistration);


    @ApiOperation(value = "individual-smf-registration.", nickname = "putIndividualSmfRegistration", notes = "see 29.503 6.2.3.5", response = SmfRegistration.class, tags={ "individual-smf-registration", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Created.", response = SmfRegistration.class) })
    @RequestMapping(value = "/{ueId}/registrations/smf-registrations/{pduSessionId}",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<SmfRegistration> putIndividualSmfRegistration(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "pduSessionId. ",required=true) @PathVariable("pduSessionId") String pduSessionId,@ApiParam(value = "The registration that is to be created." ,required=true )  @Valid @RequestBody SmfRegistration smfRegistration);


    @ApiOperation(value = "smsf-3gpp-access.", nickname = "putSmsf3gppAccess", notes = "see 29.503 6.2.3.5", tags={ "smsf-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/smsf-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> putSmsf3gppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "The SMSF registration for 3GPP access is created or updated with the received information." ,required=true )  @Valid @RequestBody SmsfRegistration smsfRegistration);


    @ApiOperation(value = "smsf-non-3gpp-access.", nickname = "putSmsfNon3GppAccess", notes = "see 29.503 6.2.3.7", tags={ "smsf-non-3gpp-access", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content.") })
    @RequestMapping(value = "/{ueId}/registrations/smsf-non-3gpp-access",
        produces = { "application/json", "application/xml" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> putSmsfNon3GppAccess(@ApiParam(value = "ueId. ",required=true) @PathVariable("ueId") String ueId,@ApiParam(value = "The SMSF registration for non 3GPP access is created or updated with the received information." ,required=true )  @Valid @RequestBody SmsfRegistration smsfRegistration);

}
