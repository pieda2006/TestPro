/*
 * Nudm_SDM API
 * This is a UDM Server API.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 0.6.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.nec.corestudy.smf.Controller.Nudm_SDM_API_client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nec.corestudy.smf.Controller.Nudm_SDM_API_client.model.AreaInformation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AreaRestriction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-21T18:27:13.711+09:00")
public class AreaRestriction {
  /**
   * Gets or Sets restrictionType
   */
  @JsonAdapter(RestrictionTypeEnum.Adapter.class)
  public enum RestrictionTypeEnum {
    SAR_ALLOWED_AREA("SAR_ALLOWED_AREA"),
    
    SAR_NOT_ALLOWED_AREA("SAR_NOT_ALLOWED_AREA"),
    
    FORBIDDEN_AREA("FORBIDDEN_AREA");

    private String value;

    RestrictionTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RestrictionTypeEnum fromValue(String text) {
      for (RestrictionTypeEnum b : RestrictionTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RestrictionTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RestrictionTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RestrictionTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RestrictionTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("restrictionType")
  private RestrictionTypeEnum restrictionType = null;

  @SerializedName("areaInformation")
  private AreaInformation areaInformation = null;

  /**
   * Gets or Sets ratType
   */
  @JsonAdapter(RatTypeEnum.Adapter.class)
  public enum RatTypeEnum {
    NR_EUTRA("NR - EUTRA"),
    
    WLAN("WLAN"),
    
    VIRTUAL("VIRTUAL");

    private String value;

    RatTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RatTypeEnum fromValue(String text) {
      for (RatTypeEnum b : RatTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RatTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RatTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RatTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RatTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("ratType")
  private List<RatTypeEnum> ratType = null;

  public AreaRestriction restrictionType(RestrictionTypeEnum restrictionType) {
    this.restrictionType = restrictionType;
    return this;
  }

   /**
   * Get restrictionType
   * @return restrictionType
  **/
  @ApiModelProperty(required = true, value = "")
  public RestrictionTypeEnum getRestrictionType() {
    return restrictionType;
  }

  public void setRestrictionType(RestrictionTypeEnum restrictionType) {
    this.restrictionType = restrictionType;
  }

  public AreaRestriction areaInformation(AreaInformation areaInformation) {
    this.areaInformation = areaInformation;
    return this;
  }

   /**
   * Get areaInformation
   * @return areaInformation
  **/
  @ApiModelProperty(value = "")
  public AreaInformation getAreaInformation() {
    return areaInformation;
  }

  public void setAreaInformation(AreaInformation areaInformation) {
    this.areaInformation = areaInformation;
  }

  public AreaRestriction ratType(List<RatTypeEnum> ratType) {
    this.ratType = ratType;
    return this;
  }

  public AreaRestriction addRatTypeItem(RatTypeEnum ratTypeItem) {
    if (this.ratType == null) {
      this.ratType = new ArrayList<RatTypeEnum>();
    }
    this.ratType.add(ratTypeItem);
    return this;
  }

   /**
   * Get ratType
   * @return ratType
  **/
  @ApiModelProperty(value = "")
  public List<RatTypeEnum> getRatType() {
    return ratType;
  }

  public void setRatType(List<RatTypeEnum> ratType) {
    this.ratType = ratType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AreaRestriction areaRestriction = (AreaRestriction) o;
    return Objects.equals(this.restrictionType, areaRestriction.restrictionType) &&
        Objects.equals(this.areaInformation, areaRestriction.areaInformation) &&
        Objects.equals(this.ratType, areaRestriction.ratType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(restrictionType, areaInformation, ratType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AreaRestriction {\n");
    
    sb.append("    restrictionType: ").append(toIndentedString(restrictionType)).append("\n");
    sb.append("    areaInformation: ").append(toIndentedString(areaInformation)).append("\n");
    sb.append("    ratType: ").append(toIndentedString(ratType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

