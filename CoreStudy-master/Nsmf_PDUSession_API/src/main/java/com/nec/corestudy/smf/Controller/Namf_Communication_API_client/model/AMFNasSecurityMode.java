/*
 * Namf_Communication API
 * This is a AMF Server API.   [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * OpenAPI spec version: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.nec.corestudy.smf.Controller.Namf_Communication_API_client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AMFNasSecurityMode
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-22T15:58:37.428+09:00")
public class AMFNasSecurityMode {
  /**
   * Gets or Sets integrityAlgorithm
   */
  @JsonAdapter(IntegrityAlgorithmEnum.Adapter.class)
  public enum IntegrityAlgorithmEnum {
    NIA0("Jamf_NIA0"),
    
    NIA1("Jamf_NIA1"),
    
    NIA2("Jamf_NIA2"),
    
    NIA3("Jamf_NIA3");

    private String value;

    IntegrityAlgorithmEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntegrityAlgorithmEnum fromValue(String text) {
      for (IntegrityAlgorithmEnum b : IntegrityAlgorithmEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IntegrityAlgorithmEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntegrityAlgorithmEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntegrityAlgorithmEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IntegrityAlgorithmEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("integrityAlgorithm")
  private IntegrityAlgorithmEnum integrityAlgorithm = null;

  /**
   * Gets or Sets cipheringAlgorithm
   */
  @JsonAdapter(CipheringAlgorithmEnum.Adapter.class)
  public enum CipheringAlgorithmEnum {
    NEA0("Jamf_NEA0"),
    
    NEA1("Jamf_NEA1"),
    
    NEA2("Jamf_NEA2"),
    
    NEA3("Jamf_NEA3");

    private String value;

    CipheringAlgorithmEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CipheringAlgorithmEnum fromValue(String text) {
      for (CipheringAlgorithmEnum b : CipheringAlgorithmEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CipheringAlgorithmEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CipheringAlgorithmEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CipheringAlgorithmEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CipheringAlgorithmEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cipheringAlgorithm")
  private CipheringAlgorithmEnum cipheringAlgorithm = null;

  public AMFNasSecurityMode integrityAlgorithm(IntegrityAlgorithmEnum integrityAlgorithm) {
    this.integrityAlgorithm = integrityAlgorithm;
    return this;
  }

   /**
   * Get integrityAlgorithm
   * @return integrityAlgorithm
  **/
  @ApiModelProperty(required = true, value = "")
  public IntegrityAlgorithmEnum getIntegrityAlgorithm() {
    return integrityAlgorithm;
  }

  public void setIntegrityAlgorithm(IntegrityAlgorithmEnum integrityAlgorithm) {
    this.integrityAlgorithm = integrityAlgorithm;
  }

  public AMFNasSecurityMode cipheringAlgorithm(CipheringAlgorithmEnum cipheringAlgorithm) {
    this.cipheringAlgorithm = cipheringAlgorithm;
    return this;
  }

   /**
   * Get cipheringAlgorithm
   * @return cipheringAlgorithm
  **/
  @ApiModelProperty(required = true, value = "")
  public CipheringAlgorithmEnum getCipheringAlgorithm() {
    return cipheringAlgorithm;
  }

  public void setCipheringAlgorithm(CipheringAlgorithmEnum cipheringAlgorithm) {
    this.cipheringAlgorithm = cipheringAlgorithm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AMFNasSecurityMode amFNasSecurityMode = (AMFNasSecurityMode) o;
    return Objects.equals(this.integrityAlgorithm, amFNasSecurityMode.integrityAlgorithm) &&
        Objects.equals(this.cipheringAlgorithm, amFNasSecurityMode.cipheringAlgorithm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(integrityAlgorithm, cipheringAlgorithm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AMFNasSecurityMode {\n");
    
    sb.append("    integrityAlgorithm: ").append(toIndentedString(integrityAlgorithm)).append("\n");
    sb.append("    cipheringAlgorithm: ").append(toIndentedString(cipheringAlgorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

