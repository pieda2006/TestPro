/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.nec.corestudy.udm.NudmSDM.api;

import com.nec.corestudy.udm.NudmSDM.model.AccessAndMobilitySubscriptionData;
import com.nec.corestudy.udm.NudmSDM.model.Nssai;
import com.nec.corestudy.udm.NudmSDM.model.SdmSubscription;
import com.nec.corestudy.udm.NudmSDM.model.SessionManagementSubscriptionData;
import com.nec.corestudy.udm.NudmSDM.model.SmfSelectionSubscriptionData;
import com.nec.corestudy.udm.NudmSDM.model.SmsManagementSubscriptionData;
import com.nec.corestudy.udm.NudmSDM.model.SmsSubscriptionData;
import com.nec.corestudy.udm.NudmSDM.model.SubscriptionDataSets;
import com.nec.corestudy.udm.NudmSDM.model.UeContextInSmfData;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-05-15T19:47:33.905+09:00")

@Api(value = "{supi}", description = "the {supi} API")
public interface SupiApi {

    @ApiOperation(value = "Delete the subscription identified by {subscriptionId}, i.e. unsubscribe.", nickname = "deleteSDMSubscription", notes = "Delete the subscription identified by {subscriptionId}, i.e. unsubscribe.", tags={ "Subscription-data.", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Upon success, an empty response body shall be returned.") })
    @RequestMapping(value = "/{supi}/sdm-subscriptions/{subscriptionId}",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteSDMSubscription(@ApiParam(value = "Represents the Subscription Permanent Identifier. ",required=true) @PathVariable("supi") String supi,@ApiParam(value = "The subscriptionId identifies an individual subscription to notifications. The value is allocated by the UDM  during creation of the Subscription resource.",required=true) @PathVariable("subscriptionId") String subscriptionId);


    @ApiOperation(value = "Retrieve the UE's subscribed Access and Mobility Data.", nickname = "getAmData", notes = "UEs see 29.503 6.1.3.5 ", response = AccessAndMobilitySubscriptionData.class, tags={ "Access and Mobility-data", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success.", response = AccessAndMobilitySubscriptionData.class) })
    @RequestMapping(value = "/{supi}/am-data",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<AccessAndMobilitySubscriptionData> getAmData(@ApiParam(value = "supi.",required=true) @PathVariable("supi") String supi,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures,@ApiParam(value = "") @Valid @RequestParam(value = "plmn-id", required = false) String plmnId);


    @ApiOperation(value = "nssai", nickname = "getNssai", notes = "see 29.503 6.1.3.2", response = Nssai.class, tags={ "Nssai", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success.", response = Nssai.class) })
    @RequestMapping(value = "/{supi}/nssai",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<Nssai> getNssai(@ApiParam(value = "",required=true) @PathVariable("supi") String supi,@ApiParam(value = "") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures,@ApiParam(value = "") @Valid @RequestParam(value = "plmn-id", required = false) String plmnId);


    @ApiOperation(value = "SessionManagementSubscriptionData", nickname = "getSmData", notes = "see 29.503 6.1.3.8", response = SessionManagementSubscriptionData.class, responseContainer = "List", tags={ "SessionManagementSubscriptionData", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = SessionManagementSubscriptionData.class, responseContainer = "List") })
    @RequestMapping(value = "/{supi}/sm-data",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<List<SessionManagementSubscriptionData>> getSmData(@ApiParam(value = "",required=true) @PathVariable("supi") String supi,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "singleNssai", required = false) String singleNssai,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "dnn", required = false) String dnn,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "plmn-id", required = false) String plmnId);


    @ApiOperation(value = "Retrieve the UE's subscribed SMF Selection Data.", nickname = "getSmfSelectdata", notes = "see 29.503 6.1.3.6 ", response = SmfSelectionSubscriptionData.class, tags={ "SmfSelectionSubscription-data", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = SmfSelectionSubscriptionData.class) })
    @RequestMapping(value = "/{supi}/smf-select-data",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<SmfSelectionSubscriptionData> getSmfSelectdata(@ApiParam(value = "",required=true) @PathVariable("supi") String supi,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures,@ApiParam(value = "") @Valid @RequestParam(value = "plmn-id", required = false) String plmnId);


    @ApiOperation(value = "SessionManagementSubscriptionData", nickname = "getSmsData", notes = "see 29.503 6.1.3.9", response = SmsSubscriptionData.class, tags={ "SessionManagementSubscriptionData", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = SmsSubscriptionData.class) })
    @RequestMapping(value = "/{supi}/sms-data",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<SmsSubscriptionData> getSmsData(@ApiParam(value = "",required=true) @PathVariable("supi") String supi);


    @ApiOperation(value = "SMSManagementSubscriptionData", nickname = "getSmsMngData", notes = "see 29.503 6.1.3.10", response = SmsManagementSubscriptionData.class, tags={ "SMSManagementSubscriptionData", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = SmsManagementSubscriptionData.class) })
    @RequestMapping(value = "/{supi}/sms-mng-data",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<SmsManagementSubscriptionData> getSmsMngData(@ApiParam(value = "",required=true) @PathVariable("supi") String supi);


    @ApiOperation(value = "Represents the Subscription Permanent Identifier.", nickname = "getSupi", notes = "see 29.503 6.1.3.11", response = SubscriptionDataSets.class, tags={ "Supi", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Upon success.", response = SubscriptionDataSets.class) })
    @RequestMapping(value = "/{supi}",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<SubscriptionDataSets> getSupi(@ApiParam(value = "Represents the Subscription Permanent Identifier. ",required=true) @PathVariable("supi") String supi,@NotNull @ApiParam(value = "[TBD].", required = true) @Valid @RequestParam(value = "datasets", required = true) List<String> datasets);


    @ApiOperation(value = "UeContextInSmfData", nickname = "getUeContextInSmfData", notes = "see 29.503 6.1.3.7", response = UeContextInSmfData.class, tags={ "UeContextInSmfData", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = UeContextInSmfData.class) })
    @RequestMapping(value = "/{supi}/ue-context-in-smf-data",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.GET)
    ResponseEntity<UeContextInSmfData> getUeContextInSmfData(@ApiParam(value = "",required=true) @PathVariable("supi") String supi,@ApiParam(value = "[TBD].") @Valid @RequestParam(value = "supportedFeatures", required = false) String supportedFeatures);


    @ApiOperation(value = "Create a subscription.", nickname = "postSDMSubscription", notes = "see 29.503 6.1.3.3. ", response = SdmSubscription.class, tags={ "Subscription-data.", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Upon success, a response body containing a representation of the created Individual subscription resource shall be returned. The HTTP response shall include a \"Location\" HTTP header that contains the resource URI of the created resource.", response = SdmSubscription.class) })
    @RequestMapping(value = "/{supi}/sdm-subscriptions",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<SdmSubscription> postSDMSubscription(@ApiParam(value = ".",required=true) @PathVariable("supi") String supi,@ApiParam(value = "The subscription that is to be created." ,required=true )  @Valid @RequestBody SdmSubscription subdata);

}
