#!/bin/bash

APP=Nudm_SDM_API

APP_ROOT=/opt/app-root
LOCAL_SOURCE_DIR=$APP_ROOT/src
SRC=/opt/s2i/destination/src

function restore_saved_artifacts() {
  if [ "$(ls /opt/s2i/destination/artifacts/ 2>/dev/null)" ]; then
    echo -n "Restoring saved artifacts from prior build..."
    cp -Rf /opt/s2i/destination/artifacts/* $LOCAL_SOURCE_DIR/.
  fi
}

ls -lRa /opt/s2i/destination

TARGET=$LOCAL_SOURCE_DIR/$APP/target

cp -Rf $SRC/. $LOCAL_SOURCE_DIR
chgrp -R 0 $LOCAL_SOURCE_DIR
chmod -R g+rw $LOCAL_SOURCE_DIR

restore_saved_artifacts

ls -lRa $LOCAL_SOURCE_DIR
cd $LOCAL_SOURCE_DIR/$APP
echo "Maven version:"
/usr/local/bin/mvn --version
if [ $https_proxy -ne "http://192.168.22.6:3128" ]; then
/usr/local/bin/mvn -s $LOCAL_SOURCE_DIR/maven/settings.xml -Djavax.net.ssl.trustStore=$LOCAL_SOURCE_DIR/maven/cacerts package
else
/usr/local/bin/mvn -s $LOCAL_SOURCE_DIR/maven/settings_cloudt.xml -Djavax.net.ssl.trustStore=$LOCAL_SOURCE_DIR/maven/cacerts package
fi
ERR=$?
if [ $ERR -ne 0 ]; then
  echo "Aborting due to error code $ERR from Maven build"
  exit $ERR
fi

mkdir -p $APP_ROOT
cp -v $TARGET/*.jar $APP_ROOT/.

chmod og+rwx $APP_ROOT
chmod -R og+w $APP_ROOT

# for incremental build
# /usr/local/bin/mvn clean
# if [ -d "$HOME/.m2/repository" ]; then
#   rm -r "$HOME/.m2/repository"
# fi

# As SpringBoot you should only have 1 fat jar
if [ $(ls $APP_ROOT/*.jar | wc -l) -eq 1 ]; then
  mv $APP_ROOT/*.jar $APP_ROOT/app.jar
  [ ! -f $APP_ROOT/app.jar ] && echo "Application could not be properly built." && exit 1 
  echo "Application jar file is located in $APP_ROOT/app.jar"
else
  exit 1
fi
